require 'telegram/bot'

token = '5051048863:AAGRjzcTUiJwIBXsa4DAQgub0nTUcnaMfn8'


QUOTES = [
	"You are always a student, never a master. You have to keep moving forward.\n- Conrad L. Hall",
	"Education is a progressive discovery of our own ignorance.\n- Durant William James",
	"The roots of education are bitter, but the fruit is sweet.\n- Aristotel",
	"Education is the best friend. An educated person is respected everywhere. Education beats the beauty and the youth.\n - Andre De Wild"
]

WORDPIC = [
	"1.png",
	"2.png",
	"3.png"
]



Telegram::Bot::Client.run(token) do |bot|
	bot.listen do |message|



  		case message
		when Telegram::Bot::Types::CallbackQuery
		case message.data

		# Here you can handle your callbacks from inline buttons
			when 'address'
				bot.api.send_location(chat_id: message.from.id, latitude: 48.28741845756063, longitude: 25.93809926949383)
				bot.api.send_message(chat_id: message.from.id, text: "–ó–∞—Ö–æ–¥—å—Ç–µ –¥–æ –Ω–∞—Å –∑–∞ –∞–¥—Ä–µ—Å–æ—é:\n‚û°Ô∏è –≤—É–ª. –û.–ö–æ–±–∏–ª—è–Ω—Å—å–∫–æ—ó, 30, –ß–µ—Ä–Ω—ñ–≤—Ü—ñ, –£–∫—Ä–∞—ó–Ω–∞")
		  	when 'contacts'
		  		bot.api.send_message(chat_id: message.from.id, text: "‚òéÔ∏è +38 (066) 378 13 16\n–ß–µ–∫–∞—î–º–æ –Ω–∞ –í–∞—à –¥–∑–≤—ñ–Ω–æ–∫!")
		  	when 'quotes'
		  		bot.api.send_message(chat_id: message.from.id, text: QUOTES.sample)
		  	when 'words'
#		  		bot.api.send_photo(chat_id: message.from.id, photo: Faraday::UploadIO.new("pictures/#{WORDPIC.sample}", "pictures/#{WORDPIC.sample}"))
				bot.api.send_message(chat_id: message.from.id, text: "–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, —Ç–µ–º—É:\n/family\n/animals\n/food")
			when 'schedule'
		  		kb2 = [
					Telegram::Bot::Types::KeyboardButton.new(text: '–ü–ù'),
					Telegram::Bot::Types::KeyboardButton.new(text: '–í–¢'),
					Telegram::Bot::Types::KeyboardButton.new(text: '–°–†'),
					Telegram::Bot::Types::KeyboardButton.new(text: '–ß–¢'),
					Telegram::Bot::Types::KeyboardButton.new(text: '–ü–¢')
		  		],
		  		[
		  			Telegram::Bot::Types::KeyboardButton.new(text: '–°—É–±–æ—Ç–∞'),
		  			Telegram::Bot::Types::KeyboardButton.new(text: '–ù–ï–î–Ü–õ–Ø')
		  		],
		  		[
		  			Telegram::Bot::Types::KeyboardButton.new(text: '/menu')
		  		]
				markup = Telegram::Bot::Types::ReplyKeyboardMarkup.new(keyboard: kb2)
				bot.api.send_message(chat_id: message.from.id, text: "–û–±–µ—Ä—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –¥–µ–Ω—å:", reply_markup: markup)
				Telegram::Bot::Types::KeyboardButton.new(remove_keyboard: true)
			end





		when Telegram::Bot::Types::Message
		case message.text()
		when "/start"
			bot.api.send_message(chat_id: message.chat.id, text: "–ü—Ä–∏–≤—ñ—Ç, #{message.from.first_name}!\n
–í–∞—Å –≤—ñ—Ç–∞—î –∞–Ω–≥–ª—ñ–π—Å—å–∫–∏–π –º–æ–≤–Ω–∏–π —Ü–µ–Ω—Ç—Ä Americana! üá∫üá∏\n
–ú–∏ –ø–∏—à–∞—î–º–æ—Å—å —Ç–∏–º, —â–æ —É –Ω–∞—Å –ø—Ä–∞—Ü—é—é—Ç—å –Ω–∞–π–∫—Ä–∞—â—ñ –≤–∏–∫–ª–∞–¥–∞—á—ñ –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—ó —É –º—ñ—Å—Ç—ñ –ß–µ—Ä–Ω—ñ–≤—Ü—ñ!
üìå –ù–∞—à—ñ –≤–∏–∫–ª–∞–¥–∞—á—ñ - –¥–æ—Å–≤—ñ—á–µ–Ω—ñ —Ç–∞ –º–∞—é—Ç—å –≤—Å–µ—Å–≤—ñ—Ç–Ω—å–æ –≤—ñ–¥–æ–º—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó Cambridge CELTA, DELTA, CELT-P, CELT-S, TKT —Ç–∞ –°AE. 
üìå –û–∫—Ä—ñ–º —Ü—å–æ–≥–æ, –æ–ø–∞–Ω—É–≤–∞—Ç–∏ —ñ–Ω–æ–∑–µ–º–Ω—ñ –º–æ–≤–∏ –í–∞–º –¥–æ–ø–æ–º–æ–∂—É—Ç—å –Ω–æ—Å—ñ—ó –º–æ–≤–∏.\n\n–î–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –∑ –±–æ—Ç–æ–º, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞:\n/menu", reply_markup: markup)

		when "/menu"
			kb = [
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç', url: 'http://americanaenglish.com/')
			],
			[
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ù–∞—à–µ –º—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è', callback_data: 'address'),
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ö–æ–Ω—Ç–∞–∫—Ç–∏', callback_data: 'contacts')
			],
			[
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–í–∏–≤—á–∏—Ç–∏ –Ω–æ–≤—ñ —Å–ª–æ–≤–∞', callback_data: 'words'),
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–¶–∏—Ç–∞—Ç–∞ –¥–Ω—è', callback_data: 'quotes')
			],
			[
		  		Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –±–æ—Ç–æ–º', switch_inline_query: '–ü—Ä–∏–≤—ñ—Ç! –ü–æ–¥–∏–≤–∏—Å—å –Ω–∞ —Ü–µ–π –±–æ—Ç! –¶–µ —á—É–¥–æ–≤–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤–∏–≤—á–∏—Ç–∏ –∞–Ω–≥–ª—ñ–π—Å—å–∫—É!')
			],
			[
			    Telegram::Bot::Types::InlineKeyboardButton.new(text: '–ì—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏', callback_data: 'schedule'),
			]
		#markup = Telegram::Bot::Types::ReplyKeyboardMarkup.new(keyboard: kb) 
		markup = Telegram::Bot::Types::InlineKeyboardMarkup.new(inline_keyboard: kb)
		bot.api.send_message(chat_id: message.chat.id, text: "–ú–ï–ù–Æ:", reply_markup: markup)


		when "/stop"
			bot.api.send_message(chat_id: message.chat.id, text: "–ì–∞—Ä–Ω–æ–≥–æ –¥–Ω—è, #{message.from.first_name}!\n–î–æ –∑—É—Å—Ç—Ä—ñ—á—ñ! üôÇ")

		when "/food"
			bot.api.send_photo(chat_id: message.chat.id, photo: Faraday::UploadIO.new("pictures/food/#{WORDPIC.sample}", "pictures/food/#{WORDPIC.sample}"))
			bot.api.send_message(chat_id: message.from.id, text: "–©–µ –æ–¥–Ω–µ —Å–ª–æ–≤–æ?\n/family\n/animals\n/food\n–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –º–µ–Ω—é:\n/menu")
		when "/animals"
			bot.api.send_photo(chat_id: message.chat.id, photo: Faraday::UploadIO.new("pictures/animals/#{WORDPIC.sample}", "pictures/animals/#{WORDPIC.sample}"))
			bot.api.send_message(chat_id: message.from.id, text: "–©–µ –æ–¥–Ω–µ —Å–ª–æ–≤–æ?\n/family\n/animals\n/food\n–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –º–µ–Ω—é:\n/menu")
		when "/family"
			bot.api.send_photo(chat_id: message.chat.id, photo: Faraday::UploadIO.new("pictures/family/#{WORDPIC.sample}", "pictures/family/#{WORDPIC.sample}"))
			bot.api.send_message(chat_id: message.from.id, text: "–©–µ –æ–¥–Ω–µ —Å–ª–æ–≤–æ?\n/family\n/animals\n/food\n–ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –º–µ–Ω—é:\n/menu")

		when "–ü–ù","–í–¢","–°–†","–ß–¢","–ü–¢"
			bot.api.send_message(chat_id: message.chat.id, text: "–ú–∏ –ø—Ä–∞—Ü—é—î–º–æ:\n9:00 - 19:00\n\n–û–±—ñ–¥–Ω—è –ø–µ—Ä–µ—Ä–µ—Ä–≤–∞:\n13:00 - 14:00\n\n–ß–µ–∫–∞—î–º–æ –Ω–∞ –∑—É—Å—Ç—Ä—ñ—á –∑ –í–∞–º–∏!")
		when "–°—É–±–æ—Ç–∞"
			bot.api.send_message(chat_id: message.chat.id, text: "12:00 - 16:00\n–ß–µ–∫–∞—î–º–æ –Ω–∞ –∑—É—Å—Ç—Ä—ñ—á –∑ –í–∞–º–∏!")
		when "–ù–ï–î–Ü–õ–Ø"
			bot.api.send_message(chat_id: message.chat.id, text: "–ù–µ–¥—ñ–ª—è –≤–∏—Ö—ñ–¥–Ω–∏–π\n–ê–ª–µ –º–∏ –∑ –Ω–µ—Ç–µ—Ä–ø—ñ–Ω–Ω—è–º —á–µ–∫–∞—î–º–æ –Ω–∞ –í–∞—Å –≤ —Ä–æ–±–æ—á—ñ –¥–Ω—ñ!")
		else
      		bot.api.send_message(chat_id: message.chat.id, text: "–û–π, —Ü–µ –Ω–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –º–µ–Ω–µ :(\n–°–ø—Ä–æ–±—É–π—Ç–µ:
      		/start
      		/menu
        	/stop")	
  		end 	




	end
end
end


